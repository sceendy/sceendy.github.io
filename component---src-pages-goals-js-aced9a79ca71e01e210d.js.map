{"version":3,"sources":["webpack:///./src/pages/goals.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["GoalsComponent","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","_ref","allJson","edges","map","_ref2","i","value","max","goal","node","percentage","completed","total","Math","floor","className","key","aria-label","title","parseInt","id","goalId","data","_public_static_d_3088078058_json__WEBPACK_IMPORTED_MODULE_0__","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"uIAgDeA,UA3CQ,kBACrBC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,MAAK,aAqBLC,OAAQ,SAAAC,GAAA,OAAAA,EAAGC,QAAWC,MAA0BC,IAAI,SAAAC,EAAiBC,GAAM,IA3B1DC,EAAOC,EA2BqCC,EAAcJ,EAApBK,KAC/CC,GA5BSJ,EA4BkBE,EAAKG,UA5BhBJ,EA4B2BC,EAAKI,MA5BxC,GAAoBC,KAAKC,MAAOR,EAAMC,EAAO,MA6B3D,OACEd,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,kBAAiBC,IAAKX,EAAGY,aAAW,2BAChDT,EAAKU,MACJC,SAAST,IAAe,GACxBjB,EAAAC,EAAAC,cAAA,QAAMoB,UAAU,oBAAoBL,EAApC,KACGjB,EAAAC,EAAAC,cAAA,QAAMoB,UAAU,6CAA6CL,GAElEjB,EAAAC,EAAAC,cAAA,YAAUY,IAAI,MAAMD,MAAOI,EAAYU,GAAIZ,EAAKa,aA/BxDC,KAAAC,2BCRJ,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CK,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAA7C,IAAAmC,EAAA,SAYMW,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvBT,EAAAxC,EAAAC,cAAC6C,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMrB,MACLuB,EAAgBF,EAAM7C,QAAU+C,EAAgBF,EAAM7C,OAAOwB,MAEtDqB,EAAM5C,QAAU4C,EAAMG,UAC5BH,EAAMrB,KAAOqB,EAAMrB,KAAKA,KAAOuB,EAAgBF,EAAM7C,OAAOwB,MAGvDY,EAAAxC,EAAAC,cAAA,uCA4BfqC,EAAYe,UAAY,CACtBzB,KAAM0B,IAAUC,OAChBnD,MAAOkD,IAAUE,OAAOC,WACxBpD,OAAQiD,IAAUI,KAClBN,SAAUE,IAAUI,wGCnDhBC,EAAmB,SAAArD,GAAkB,IAAfsD,EAAetD,EAAfsD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOjB,IAAM9C,cAAcgE,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-pages-goals-js-aced9a79ca71e01e210d.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst getPercentage = (value, max) =>  `${Math.floor((value/max) * 100)}`;\n\nconst GoalsComponent = () => (\n  <Fragment>\n    <h2>Q2 2019 goals</h2>\n    <StaticQuery\n      query={graphql`\n        query GoalsQuery {\n          allJson (\n            filter: {\n              quarter: {\n                eq: 2\n              }\n            }\n          ){\n            edges {\n              node {\n                goalId\n                title\n                total\n                completed\n                quarter\n              }\n            }\n          }\n        }\n      `}\n      render={({ allJson: { edges: goals }}) => goals.map(({ node: goal }, i) => {\n        const percentage = getPercentage(goal.completed, goal.total);\n        return (\n          <div className=\"goal__container\"key={i} aria-label=\"progress bars for goals\">\n            {goal.title}\n            { parseInt(percentage) <= 94 ?\n              <span className=\"goal__percentage\">{percentage}%</span>\n               : <span className=\"goal__percentage goal__percentage--filled\">{percentage}</span>\n             }\n            <progress max=\"100\" value={percentage} id={goal.goalId}></progress>\n          </div>\n        );\n      })\n    }\n    />\n  </Fragment>\n);\n\nexport default GoalsComponent;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}