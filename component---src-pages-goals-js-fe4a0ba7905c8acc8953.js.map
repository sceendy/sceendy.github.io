{"version":3,"sources":["webpack:///./src/pages/goals.js"],"names":["goals","goalId","title","total","completed","__webpack_exports__","default","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_0__","Fragment","map","goal","className","key","idName","document","progressBar","getElementById","value","max","Math","floor","getAttribute","getProgress","id"],"mappings":"qHAIMA,IAEFC,OAAQ,kBACRC,MAAO,wCACPC,MAAO,GACPC,UAAW,IAGXH,OAAQ,WACRC,MAAO,uBACPC,MAAO,IACPC,UAAW,KAGXH,OAAQ,MACRC,MAAO,eACPC,MAAO,GACPC,UAAW,KAGXH,OAAQ,aACRC,MAAO,aACPC,MAAO,GACPC,UAAW,IAGXH,OAAQ,YACRC,MAAO,wCACPC,MAAO,IACPC,UAAW,KAGXH,OAAQ,YACRC,MAAO,oCACPC,MAAO,IACPC,UAAW,KA8BfC,EAAAC,QA1BuB,WAYrB,OACEC,EAAAC,EAAAC,cAACC,EAAAC,SAAD,KACEJ,EAAAC,EAAAC,cAAA,2BACCT,EAAMY,IAAI,SAAAC,GAAA,OACTN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBAAkBC,IAAKF,EAAKZ,QACxCY,EAAKX,MACNK,EAAAC,EAAAC,cAAA,QAAMK,UAAU,oBAjBJ,SAACE,GACnB,GAAuB,oBAAbC,SAA0B,CAClC,IAAMC,EAAcD,SAASE,eAAeH,GAC5C,GAAIE,EAGF,OAhDc,SAACE,EAAOC,GAAR,OAAoBC,KAAKC,MAAOH,EAAMC,EAAO,KAA7C,KA8CAH,EAAYM,aAAa,SAC3BN,EAAYM,aAAa,SAYCC,CAAYZ,EAAKZ,SACrDM,EAAAC,EAAAC,cAAA,YAAUY,IAAKR,EAAKV,MAAOiB,MAAOP,EAAKT,UAAWsB,GAAIb,EAAKZ","file":"component---src-pages-goals-js-fe4a0ba7905c8acc8953.js","sourcesContent":["import React, { Fragment } from 'react';\n\nconst getPercentage = (value, max) =>  `${Math.floor((value/max) * 100)}%`;\n\nconst goals = [\n  {\n    goalId: 'personalProject',\n    title: 'Work on personal project for 20 hours',\n    total: 20,\n    completed: 3\n  },\n  {\n    goalId: 'meditate',\n    title: 'Meditate for 4 hours',\n    total: 240,\n    completed: 90\n  },\n  {\n    goalId: 'run',\n    title: 'Run 50 miles',\n    total: 50,\n    completed: 15\n  },\n  {\n    goalId: 'loseWeight',\n    title: 'Lose 15lbs',\n    total: 15,\n    completed: 0\n  },\n  {\n    goalId: 'learning1',\n    title: 'Complete Udacitys\\' Intro to CS course',\n    total: 100,\n    completed: 52\n  },\n  {\n    goalId: 'learning2',\n    title: 'Complete Pluralsights\\' React Path',\n    total: 100,\n    completed: 65\n  },\n];\n\nconst GoalsComponent = () => {\n  const getProgress = (idName) => {\n    if(typeof document !== \"undefined\") {\n      const progressBar = document.getElementById(idName);\n      if (progressBar) {\n        const value = progressBar.getAttribute('value');\n        const max = progressBar.getAttribute('max');\n        return getPercentage(value, max);\n      }\n    }\n  };\n  \n  return (\n    <Fragment>\n      <h2>Q1 2019 goals</h2>\n      {goals.map(goal =>\n        <div className=\"goal__container\" key={goal.goalId}>\n          {goal.title}\n          <span className=\"goal__percentage\">{getProgress(goal.goalId)}</span>\n          <progress max={goal.total} value={goal.completed} id={goal.goalId}></progress>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default GoalsComponent;"],"sourceRoot":""}