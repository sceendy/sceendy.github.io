{"componentChunkName":"component---src-templates-post-js","path":"/blog/2015/08-20-code-challenge-7/","webpackCompilationHash":"5e881078479f0ca37484","result":{"data":{"markdownRemark":{"html":"<p>This weeks' Code Challenge by DevWars is back to the basics. They provided a <a href=\"https://dribbble.com/shots/2200506-Article-teaser-card\" target=\"_blank\">neat dribbble design</a> and want us to code it out. Initially, the challenges were pretty static (i.e. here's a design, use HTML/CSS to build it out) but this week, they want developers to show off some JavaScript and CSS3 skills. Bring forth the animations!\n<br/><br/></p>\n<h4>Objectives</h4>\n1. Make this card fold in half and \"close\", like a book.\n<br/>\n2. On hover it must open to show the content.\n<br/>\n*BONUS* Add some extra pages.\n<br/><br/>\n<iframe height='577' scrolling='no' src='//codepen.io/sceendy/embed/NqZWNm/?height=577&theme-id=11022&default-tab=result' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='http://codepen.io/sceendy/pen/NqZWNm/'>DevWarsWeek7</a> by Cindy Juarez (<a href='http://codepen.io/sceendy'>@sceendy</a>) on <a href='http://codepen.io'>CodePen</a>.\n</iframe>\n<br/><br/>\n<h4>my approach</h4>\nI pretty much stuck to the design as it is but personalized it a little with my own photos/name and the date I worked on it. The challenge requirements seemed a bit odd to me, though - the interaction, anyway. Hovering to show the card? <a href=\"http://uxmovement.com/navigation/why-hover-menus-do-users-more-harm-than-good/\">Bleh</a> - not a fan of hovering when it means hiding <i>useful</i> information rather than adding additional content (tips, etc). If it's theoretically an article card, I'd imagine that it'd already be displaying - interactions should be added upon it; not to reveal it. Since it's a teaser, it might be better to do that action for the <b>read more</b> function instead.\n<br/><br/>\nAs far as the code went, I debated on the best way to handle the skewed side of the left panel and doing most of the animation with CSS3. There were a few of ways I could imagine accomplishing this but in the end I went with a similar approach that I take with ribbons on cards.\n<br/><br/>\n<strong>sass:</strong><br/>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token property-line\"><span class=\"token property\">&amp;</span><span class=\"token punctuation\">:</span><span class=\"token property\">after</span></span>\n<span class=\"token property-line\">  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> </span><span class=\"token string\">''</span>\n<span class=\"token property-line\">  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100<span class=\"token operator\">%</span></span>\n<span class=\"token property-line\">  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 90px</span>\n<span class=\"token property-line\">  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fff</span>\n<span class=\"token property-line\">  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute</span>\n<span class=\"token property-line\">  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0</span>\n<span class=\"token property-line\">  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> -49px</span>\n<span class=\"token property-line\">  <span class=\"token property\">-webkit-transform</span><span class=\"token punctuation\">:</span> skew(10deg)</span>\n<span class=\"token property-line\">  <span class=\"token property\">-moz-transform</span><span class=\"token punctuation\">:</span> skew(10deg)</span>\n<span class=\"token property-line\">  <span class=\"token property\">-o-transform</span><span class=\"token punctuation\">:</span> skew(10deg)</span>\n<span class=\"token property-line\">  <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> -9</span></code></pre></div>\n<h4>css3</h4>\nI used the skew method to get the side slanted like in the design. By adding the pseudo, <span class=\"code-inline\">:after</span> for <span class=\"code-inline\">.left-side</span> it becomes hooked onto that class. Next up were the animations, two classes were created: <span class=\"code-inline\">.animation-in</span> and <span class=\"code-inline\">.animation-out</span> to toggle when the close button is clicked. I added <span class=\"code-inline\">transform: scaleX(-1) translateX(-100px)</span> to create the illusion of the page turning. It currently just flips the text too and my next step would be to make it show as more of a book cover at the midpoint before it completely flips. However, I do like doing these write ups right after I've worked on these challenges in the allotted time for my own learning purposes. Plus, it's pretty cool looking back on these and seeing how much more efficient I become with tasks like this.\n<br/><br/>\n<b>The goal is to only spend 1-2 hours on these.</b>","frontmatter":{"title":"Code Challenge #7","date":"August 20, 2015","tags":["css3","sass","javascript"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"blog/2015/08-20-code-challenge-7/","date":"2015-08-20T14:06:02.000Z"}}}