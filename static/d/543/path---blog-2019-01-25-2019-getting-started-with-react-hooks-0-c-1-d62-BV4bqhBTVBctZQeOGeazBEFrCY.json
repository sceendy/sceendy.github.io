{"data":{"markdownRemark":{"html":"<p>In the past few weeks, I've seen React Hooks discussed a lot and kinda wanted to check them out. I thought about what kind of blog style I could present them in and I figured I could do a step-by-step tutorial of how to use them. However, I really just wanted to see how I could use it making something simple so let's just try it out.</p>\n<h3>What are hooks?</h3>\n<p>As of React v16.8.0-alpha.0, you can use a new feature that lets us use state and other features without having to write a <code class=\"language-text\">Class</code>. What does that mean? So, the hooks let you reuse state logic with each handling a different aspect of it. </p>\n<p>The first one I saw used was <code class=\"language-text\">useState</code> which is used for declaring a state variable. Then, there's <code class=\"language-text\">useEffect</code> which you'd use for side effects - remember some of the logic you'd put in componentDidMount, componentDidUpdate, and componentWillUnmount? Yeah, that's pretty much what's going on there. </p>\n<p>Those are the main two I decided to try out </p>","frontmatter":{"title":"Front-end Friday: React Hooks","date":"January 26, 2019","tags":["dev","react"]}}},"pageContext":{"slug":"blog/2019/01-25-2019-getting-started-with-react-hooks/","date":"2019-01-26T04:30:00.000Z"}}